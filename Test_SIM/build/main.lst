ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB144:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** UART_HandleTypeDef huart2;
  45:Core/Src/main.c **** UART_HandleTypeDef huart6;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  55:Core/Src/main.c **** static void MX_USART6_UART_Init(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** const char apn[] = "v-internet";                                 // Change this to your Provider de
  63:Core/Src/main.c **** const char server[] = "huy.assfa.net";                           // Change this to your domain
  64:Core/Src/main.c **** const int port = 443;
  65:Core/Src/main.c **** const char resource[] = "/insert.php"; // Endpoint c·ªßa API tr√™n server
  66:Core/Src/main.c **** const uint32_t timeOut = 20000;        // Th·ªùi gian ch·ªù cho c√°c l·ªánh AT (ms)
  67:Core/Src/main.c **** char content[80];                      // N·ªôi dung d·ªØ li·ªáu POST
  68:Core/Src/main.c **** char ATcommand[80];                    // Chu·ªói l·ªánh AT ƒë∆∞·ª£c x√¢y d·ª±ng
  69:Core/Src/main.c **** uint8_t buffer[100] = {0};             // B·ªô ƒë·ªám nh·∫≠n d·ªØ li·ªáu t·ª´ module SIM
  70:Core/Src/main.c **** uint32_t previousTick;                 // Bi·∫øn l∆∞u th·ªùi gian tr∆∞·ªõc ƒë√≥
  71:Core/Src/main.c **** uint16_t distance;                     // Kho·∫£ng c√°ch ho·∫∑c d·ªØ li·ªáu c·∫ßn g·ª≠i
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** // H√†m g·ª≠i l·ªánh AT ƒë·∫øn module SIM v√† nh·∫≠n ph·∫£n h·ªìi
  74:Core/Src/main.c **** void SIMTransmit(char *cmd)
  75:Core/Src/main.c **** {
  76:Core/Src/main.c ****   memset(buffer, 0, sizeof(buffer));                             // X√≥a b·ªô ƒë·ªám tr∆∞·ªõc khi s
  77:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)cmd, strlen(cmd), 1000); // G·ª≠i l·ªánh AT qua UART2
  78:Core/Src/main.c ****   HAL_UART_Receive(&huart2, buffer, 100, 1000);                  // Nh·∫≠n ph·∫£n h·ªìi t·ª´ module
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   // G·ª≠i ph·∫£n h·ªìi nh·∫≠n ƒë∆∞·ª£c qua UART6 ƒë·ªÉ debug
  81:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, (uint8_t *)"Response: ", strlen("Response: "), 1000);
  82:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, buffer, strlen((char *)buffer), 1000);
  83:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, (uint8_t *)"\r\n", 2, 1000);
  84:Core/Src/main.c **** }
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** // H√†m ki·ªÉm tra c·∫•u h√¨nh APN tr√™n module SIM
  87:Core/Src/main.c **** void checkAPN(void)
  88:Core/Src/main.c **** {
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 3


  89:Core/Src/main.c ****   uint8_t APNisOK = 0;
  90:Core/Src/main.c ****   previousTick = HAL_GetTick(); // Ghi nh·∫≠n th·ªùi gian b·∫Øt ƒë·∫ßu ki·ªÉm tra
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   while (!APNisOK && previousTick + timeOut > HAL_GetTick())
  93:Core/Src/main.c ****   {
  94:Core/Src/main.c ****     SIMTransmit("AT+CGDCONT?\r\n"); // G·ª≠i l·ªánh ki·ªÉm tra c·∫•u h√¨nh APN hi·ªán t·∫°i
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     if (strstr((char *)buffer, apn)) // Ki·ªÉm tra ph·∫£n h·ªìi ch·ª©a th√¥ng tin APN ƒë√∫ng
  97:Core/Src/main.c ****     {
  98:Core/Src/main.c ****       APNisOK = 1;
  99:Core/Src/main.c ****       HAL_UART_Transmit(&huart6, (uint8_t *)"APN duoc cau hinh thanh cong!.\r\n", strlen("APN duoc 
 100:Core/Src/main.c ****     }
 101:Core/Src/main.c ****     else
 102:Core/Src/main.c ****     {
 103:Core/Src/main.c ****       HAL_UART_Transmit(&huart6, (uint8_t *)"APN cau hinh sai...\r\n", strlen("APN cau hinh sai...\
 104:Core/Src/main.c ****       sprintf(ATcommand, "AT+CGDCONT=1,\"IP\",\"%s\",\"0.0.0.0\",0,0\r\n", apn); // L·ªánh c·∫•u h√
 105:Core/Src/main.c ****       SIMTransmit(ATcommand);
 106:Core/Src/main.c ****     }
 107:Core/Src/main.c ****     HAL_Delay(1000); // ƒê·ª£i 1 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   if (!APNisOK) // N·∫øu kh√¥ng th√†nh c√¥ng sau th·ªùi gian ch·ªù
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t *)"APN configuration failed.\r\n", strlen("APN configuratio
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** void httpPost(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   // C·∫•u h√¨nh HTTP
 119:Core/Src/main.c ****   SIMTransmit("AT+HTTPINIT\r\n"); // Kh·ªüi t·∫°o HTTP
 120:Core/Src/main.c ****   HAL_Delay(2000);                // ƒê·ª£i m·ªôt ch√∫t sau khi kh·ªüi t·∫°o
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   // C·∫•u h√¨nh URL (Server v√† Endpoint)
 123:Core/Src/main.c ****   sprintf(ATcommand, "AT+HTTPPARA=\"URL\",\"https://%s%s\"\r\n", server, resource);
 124:Core/Src/main.c ****   SIMTransmit(ATcommand); // C·∫•u h√¨nh URL c·ªßa server
 125:Core/Src/main.c ****   HAL_Delay(2000);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   // C·∫•u h√¨nh lo·∫°i n·ªôi dung (Content-Type)
 128:Core/Src/main.c ****   SIMTransmit("AT+HTTPPARA=\"CONTENT\",\"application/x-www-form-urlencoded\"\r\n");
 129:Core/Src/main.c ****   HAL_Delay(2000);
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   // X√°c ƒë·ªãnh k√≠ch th∆∞·ªõc d·ªØ li·ªáu POST
 132:Core/Src/main.c ****   sprintf(ATcommand, "AT+HTTPDATA=%d,10000\r\n", strlen(content)); // Th·ªùi gian ch·ªù 10000ms
 133:Core/Src/main.c ****   SIMTransmit(ATcommand);
 134:Core/Src/main.c ****   HAL_Delay(2000);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   // G·ª≠i d·ªØ li·ªáu POST
 137:Core/Src/main.c ****   SIMTransmit(content); // N·ªôi dung s·∫Ω ƒë∆∞·ª£c g·ª≠i d∆∞·ªõi d·∫°ng body c·ªßa POST
 138:Core/Src/main.c ****   HAL_Delay(2000);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   // G·ª≠i l·ªánh POST ƒë·∫øn server
 141:Core/Src/main.c ****   SIMTransmit("AT+HTTPACTION=1\r\n"); // 1 l√† HTTP POST
 142:Core/Src/main.c ****   HAL_Delay(5000);                    // ƒê·ª£i ph·∫£n h·ªìi t·ª´ server
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   // Ki·ªÉm tra m√£ tr·∫°ng th√°i HTTP t·ª´ server (200 OK)
 145:Core/Src/main.c ****   if (strstr((char *)buffer, "+HTTPACTION: 1,200"))
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 4


 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t *)"POST success.\r\n", strlen("POST success.\r\n"), 1000);
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   else
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     HAL_UART_Transmit(&huart6, (uint8_t *)"POST failed.\r\n", strlen("POST failed.\r\n"), 1000);
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   // ƒê√≥ng HTTP
 155:Core/Src/main.c ****   SIMTransmit("AT+HTTPTERM\r\n");
 156:Core/Src/main.c ****   HAL_Delay(2000);
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE END 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief  The application entry point.
 163:Core/Src/main.c ****   * @retval int
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** int main(void)
 166:Core/Src/main.c **** {
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END 1 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 175:Core/Src/main.c ****   HAL_Init();
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END Init */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* Configure the system clock */
 182:Core/Src/main.c ****   SystemClock_Config();
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END SysInit */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* Initialize all configured peripherals */
 189:Core/Src/main.c ****   MX_GPIO_Init();
 190:Core/Src/main.c ****   MX_USART2_UART_Init();
 191:Core/Src/main.c ****   MX_USART6_UART_Init();
 192:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 193:Core/Src/main.c ****   checkAPN(); // Ki·ªÉm tra APN tr∆∞·ªõc khi s·ª≠ d·ª•ng HTTP POST
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Infinite loop */
 198:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 199:Core/Src/main.c ****   while (1)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     /* USER CODE END WHILE */
 202:Core/Src/main.c **** 
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 5


 203:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 204:Core/Src/main.c ****     distance = 100;
 205:Core/Src/main.c ****     sprintf(content, "distance=%d", distance);
 206:Core/Src/main.c ****     httpPost();
 207:Core/Src/main.c ****   }
 208:Core/Src/main.c ****   /* USER CODE END 3 */
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief System Clock Configuration
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** void SystemClock_Config(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 218:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 223:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 226:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 227:Core/Src/main.c ****   */
 228:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 230:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 236:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 237:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 245:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 246:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 247:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 249:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c **** }
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** /**
 258:Core/Src/main.c ****   * @brief USART2 Initialization Function
 259:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 6


 260:Core/Src/main.c ****   * @retval None
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 263:Core/Src/main.c **** {
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 272:Core/Src/main.c ****   huart2.Instance = USART2;
 273:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 274:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 275:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 276:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 277:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 278:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 279:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 280:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief USART6 Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_USART6_UART_Init(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END USART6_Init 0 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 1 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END USART6_Init 1 */
 305:Core/Src/main.c ****   huart6.Instance = USART6;
 306:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 307:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 308:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 309:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 310:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 311:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 312:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 313:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 316:Core/Src/main.c ****   }
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 7


 317:Core/Src/main.c ****   /* USER CODE BEGIN USART6_Init 2 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /* USER CODE END USART6_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /**
 324:Core/Src/main.c ****   * @brief GPIO Initialization Function
 325:Core/Src/main.c ****   * @param None
 326:Core/Src/main.c ****   * @retval None
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c **** static void MX_GPIO_Init(void)
 329:Core/Src/main.c **** {
  28              		.loc 1 329 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 84B0     		sub	sp, sp, #16
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
 330:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 331:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 334:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  36              		.loc 1 334 3 view .LVU1
  37              	.LBB4:
  38              		.loc 1 334 3 view .LVU2
  39 0002 0022     		movs	r2, #0
  40 0004 0192     		str	r2, [sp, #4]
  41              		.loc 1 334 3 view .LVU3
  42 0006 104B     		ldr	r3, .L3
  43 0008 196B     		ldr	r1, [r3, #48]
  44 000a 41F08001 		orr	r1, r1, #128
  45 000e 1963     		str	r1, [r3, #48]
  46              		.loc 1 334 3 view .LVU4
  47 0010 196B     		ldr	r1, [r3, #48]
  48 0012 01F08001 		and	r1, r1, #128
  49 0016 0191     		str	r1, [sp, #4]
  50              		.loc 1 334 3 view .LVU5
  51 0018 0199     		ldr	r1, [sp, #4]
  52              	.LBE4:
  53              		.loc 1 334 3 view .LVU6
 335:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  54              		.loc 1 335 3 view .LVU7
  55              	.LBB5:
  56              		.loc 1 335 3 view .LVU8
  57 001a 0292     		str	r2, [sp, #8]
  58              		.loc 1 335 3 view .LVU9
  59 001c 196B     		ldr	r1, [r3, #48]
  60 001e 41F00101 		orr	r1, r1, #1
  61 0022 1963     		str	r1, [r3, #48]
  62              		.loc 1 335 3 view .LVU10
  63 0024 196B     		ldr	r1, [r3, #48]
  64 0026 01F00101 		and	r1, r1, #1
  65 002a 0291     		str	r1, [sp, #8]
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 8


  66              		.loc 1 335 3 view .LVU11
  67 002c 0299     		ldr	r1, [sp, #8]
  68              	.LBE5:
  69              		.loc 1 335 3 view .LVU12
 336:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  70              		.loc 1 336 3 view .LVU13
  71              	.LBB6:
  72              		.loc 1 336 3 view .LVU14
  73 002e 0392     		str	r2, [sp, #12]
  74              		.loc 1 336 3 view .LVU15
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 42F00402 		orr	r2, r2, #4
  77 0036 1A63     		str	r2, [r3, #48]
  78              		.loc 1 336 3 view .LVU16
  79 0038 1B6B     		ldr	r3, [r3, #48]
  80 003a 03F00403 		and	r3, r3, #4
  81 003e 0393     		str	r3, [sp, #12]
  82              		.loc 1 336 3 view .LVU17
  83 0040 039B     		ldr	r3, [sp, #12]
  84              	.LBE6:
  85              		.loc 1 336 3 view .LVU18
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 339:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 340:Core/Src/main.c **** }
  86              		.loc 1 340 1 is_stmt 0 view .LVU19
  87 0042 04B0     		add	sp, sp, #16
  88              	.LCFI1:
  89              		.cfi_def_cfa_offset 0
  90              		@ sp needed
  91 0044 7047     		bx	lr
  92              	.L4:
  93 0046 00BF     		.align	2
  94              	.L3:
  95 0048 00380240 		.word	1073887232
  96              		.cfi_endproc
  97              	.LFE144:
  99              		.section	.rodata.SIMTransmit.str1.4,"aMS",%progbits,1
 100              		.align	2
 101              	.LC0:
 102 0000 52657370 		.ascii	"Response: \000"
 102      6F6E7365 
 102      3A2000
 103 000b 00       		.align	2
 104              	.LC1:
 105 000c 0D0A00   		.ascii	"\015\012\000"
 106              		.section	.text.SIMTransmit,"ax",%progbits
 107              		.align	1
 108              		.global	SIMTransmit
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	SIMTransmit:
 114              	.LVL0:
 115              	.LFB137:
  75:Core/Src/main.c ****   memset(buffer, 0, sizeof(buffer));                             // X√≥a b·ªô ƒë·ªám tr∆∞·ªõc khi s
 116              		.loc 1 75 1 is_stmt 1 view -0
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 9


 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/main.c ****   memset(buffer, 0, sizeof(buffer));                             // X√≥a b·ªô ƒë·ªám tr∆∞·ªõc khi s
 120              		.loc 1 75 1 is_stmt 0 view .LVU21
 121 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 122              	.LCFI2:
 123              		.cfi_def_cfa_offset 24
 124              		.cfi_offset 3, -24
 125              		.cfi_offset 4, -20
 126              		.cfi_offset 5, -16
 127              		.cfi_offset 6, -12
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 0546     		mov	r5, r0
  76:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)cmd, strlen(cmd), 1000); // G·ª≠i l·ªánh AT qua UART2
 131              		.loc 1 76 3 is_stmt 1 view .LVU22
 132 0004 194C     		ldr	r4, .L7
 133 0006 6427     		movs	r7, #100
 134 0008 3A46     		mov	r2, r7
 135 000a 0021     		movs	r1, #0
 136 000c 2046     		mov	r0, r4
 137              	.LVL1:
  76:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)cmd, strlen(cmd), 1000); // G·ª≠i l·ªánh AT qua UART2
 138              		.loc 1 76 3 is_stmt 0 view .LVU23
 139 000e FFF7FEFF 		bl	memset
 140              	.LVL2:
  77:Core/Src/main.c ****   HAL_UART_Receive(&huart2, buffer, 100, 1000);                  // Nh·∫≠n ph·∫£n h·ªìi t·ª´ module
 141              		.loc 1 77 3 is_stmt 1 view .LVU24
  77:Core/Src/main.c ****   HAL_UART_Receive(&huart2, buffer, 100, 1000);                  // Nh·∫≠n ph·∫£n h·ªìi t·ª´ module
 142              		.loc 1 77 46 is_stmt 0 view .LVU25
 143 0012 2846     		mov	r0, r5
 144 0014 FFF7FEFF 		bl	strlen
 145              	.LVL3:
  77:Core/Src/main.c ****   HAL_UART_Receive(&huart2, buffer, 100, 1000);                  // Nh·∫≠n ph·∫£n h·ªìi t·ª´ module
 146              		.loc 1 77 3 view .LVU26
 147 0018 154E     		ldr	r6, .L7+4
 148 001a 4FF47A73 		mov	r3, #1000
 149 001e 82B2     		uxth	r2, r0
 150 0020 2946     		mov	r1, r5
 151 0022 3046     		mov	r0, r6
 152 0024 FFF7FEFF 		bl	HAL_UART_Transmit
 153              	.LVL4:
  78:Core/Src/main.c **** 
 154              		.loc 1 78 3 is_stmt 1 view .LVU27
 155 0028 4FF47A73 		mov	r3, #1000
 156 002c 3A46     		mov	r2, r7
 157 002e 2146     		mov	r1, r4
 158 0030 3046     		mov	r0, r6
 159 0032 FFF7FEFF 		bl	HAL_UART_Receive
 160              	.LVL5:
  81:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, buffer, strlen((char *)buffer), 1000);
 161              		.loc 1 81 3 view .LVU28
 162 0036 0F4D     		ldr	r5, .L7+8
 163              	.LVL6:
  81:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, buffer, strlen((char *)buffer), 1000);
 164              		.loc 1 81 3 is_stmt 0 view .LVU29
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 10


 165 0038 4FF47A73 		mov	r3, #1000
 166 003c 0A22     		movs	r2, #10
 167 003e 0E49     		ldr	r1, .L7+12
 168 0040 2846     		mov	r0, r5
 169 0042 FFF7FEFF 		bl	HAL_UART_Transmit
 170              	.LVL7:
  82:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, (uint8_t *)"\r\n", 2, 1000);
 171              		.loc 1 82 3 is_stmt 1 view .LVU30
  82:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, (uint8_t *)"\r\n", 2, 1000);
 172              		.loc 1 82 38 is_stmt 0 view .LVU31
 173 0046 2046     		mov	r0, r4
 174 0048 FFF7FEFF 		bl	strlen
 175              	.LVL8:
  82:Core/Src/main.c ****   HAL_UART_Transmit(&huart6, (uint8_t *)"\r\n", 2, 1000);
 176              		.loc 1 82 3 view .LVU32
 177 004c 4FF47A73 		mov	r3, #1000
 178 0050 82B2     		uxth	r2, r0
 179 0052 2146     		mov	r1, r4
 180 0054 2846     		mov	r0, r5
 181 0056 FFF7FEFF 		bl	HAL_UART_Transmit
 182              	.LVL9:
  83:Core/Src/main.c **** }
 183              		.loc 1 83 3 is_stmt 1 view .LVU33
 184 005a 4FF47A73 		mov	r3, #1000
 185 005e 0222     		movs	r2, #2
 186 0060 0649     		ldr	r1, .L7+16
 187 0062 2846     		mov	r0, r5
 188 0064 FFF7FEFF 		bl	HAL_UART_Transmit
 189              	.LVL10:
  84:Core/Src/main.c **** 
 190              		.loc 1 84 1 is_stmt 0 view .LVU34
 191 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 192              	.L8:
 193 006a 00BF     		.align	2
 194              	.L7:
 195 006c 00000000 		.word	buffer
 196 0070 00000000 		.word	huart2
 197 0074 00000000 		.word	huart6
 198 0078 00000000 		.word	.LC0
 199 007c 0C000000 		.word	.LC1
 200              		.cfi_endproc
 201              	.LFE137:
 203              		.section	.rodata.checkAPN.str1.4,"aMS",%progbits,1
 204              		.align	2
 205              	.LC2:
 206 0000 41542B43 		.ascii	"AT+CGDCONT?\015\012\000"
 206      4744434F 
 206      4E543F0D 
 206      0A00
 207 000e 0000     		.align	2
 208              	.LC3:
 209 0010 41504E20 		.ascii	"APN duoc cau hinh thanh cong!.\015\012\000"
 209      64756F63 
 209      20636175 
 209      2068696E 
 209      68207468 
 210 0031 000000   		.align	2
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 11


 211              	.LC4:
 212 0034 41504E20 		.ascii	"APN cau hinh sai...\015\012\000"
 212      63617520 
 212      68696E68 
 212      20736169 
 212      2E2E2E0D 
 213 004a 0000     		.align	2
 214              	.LC5:
 215 004c 41542B43 		.ascii	"AT+CGDCONT=1,\"IP\",\"%s\",\"0.0.0.0\",0,0\015\012\000"
 215      4744434F 
 215      4E543D31 
 215      2C224950 
 215      222C2225 
 216 0073 00       		.align	2
 217              	.LC6:
 218 0074 41504E20 		.ascii	"APN configuration failed.\015\012\000"
 218      636F6E66 
 218      69677572 
 218      6174696F 
 218      6E206661 
 219              		.section	.text.checkAPN,"ax",%progbits
 220              		.align	1
 221              		.global	checkAPN
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	checkAPN:
 227              	.LFB138:
  88:Core/Src/main.c ****   uint8_t APNisOK = 0;
 228              		.loc 1 88 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 38B5     		push	{r3, r4, r5, lr}
 233              	.LCFI3:
 234              		.cfi_def_cfa_offset 16
 235              		.cfi_offset 3, -16
 236              		.cfi_offset 4, -12
 237              		.cfi_offset 5, -8
 238              		.cfi_offset 14, -4
  89:Core/Src/main.c ****   previousTick = HAL_GetTick(); // Ghi nh·∫≠n th·ªùi gian b·∫Øt ƒë·∫ßu ki·ªÉm tra
 239              		.loc 1 89 3 view .LVU36
 240              	.LVL11:
  90:Core/Src/main.c **** 
 241              		.loc 1 90 3 view .LVU37
  90:Core/Src/main.c **** 
 242              		.loc 1 90 18 is_stmt 0 view .LVU38
 243 0002 FFF7FEFF 		bl	HAL_GetTick
 244              	.LVL12:
  90:Core/Src/main.c **** 
 245              		.loc 1 90 16 view .LVU39
 246 0006 1F4B     		ldr	r3, .L18
 247 0008 1860     		str	r0, [r3]
  92:Core/Src/main.c ****   {
 248              		.loc 1 92 3 is_stmt 1 view .LVU40
  89:Core/Src/main.c ****   previousTick = HAL_GetTick(); // Ghi nh·∫≠n th·ªùi gian b·∫Øt ƒë·∫ßu ki·ªÉm tra
 249              		.loc 1 89 11 is_stmt 0 view .LVU41
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 12


 250 000a 0025     		movs	r5, #0
  92:Core/Src/main.c ****   {
 251              		.loc 1 92 9 view .LVU42
 252 000c 13E0     		b	.L10
 253              	.LVL13:
 254              	.L11:
 103:Core/Src/main.c ****       sprintf(ATcommand, "AT+CGDCONT=1,\"IP\",\"%s\",\"0.0.0.0\",0,0\r\n", apn); // L·ªánh c·∫•u h√
 255              		.loc 1 103 7 is_stmt 1 view .LVU43
 256 000e 4FF47A73 		mov	r3, #1000
 257 0012 1522     		movs	r2, #21
 258 0014 1C49     		ldr	r1, .L18+4
 259 0016 1D48     		ldr	r0, .L18+8
 260 0018 FFF7FEFF 		bl	HAL_UART_Transmit
 261              	.LVL14:
 104:Core/Src/main.c ****       SIMTransmit(ATcommand);
 262              		.loc 1 104 7 view .LVU44
 263 001c 1C4C     		ldr	r4, .L18+12
 264 001e 1D4A     		ldr	r2, .L18+16
 265 0020 1D49     		ldr	r1, .L18+20
 266 0022 2046     		mov	r0, r4
 267 0024 FFF7FEFF 		bl	sprintf
 268              	.LVL15:
 105:Core/Src/main.c ****     }
 269              		.loc 1 105 7 view .LVU45
 270 0028 2046     		mov	r0, r4
 271 002a FFF7FEFF 		bl	SIMTransmit
 272              	.LVL16:
 273              	.L12:
 107:Core/Src/main.c ****   }
 274              		.loc 1 107 5 view .LVU46
 275 002e 4FF47A70 		mov	r0, #1000
 276 0032 FFF7FEFF 		bl	HAL_Delay
 277              	.LVL17:
 278              	.L10:
  92:Core/Src/main.c ****   {
 279              		.loc 1 92 19 view .LVU47
 280 0036 D5B9     		cbnz	r5, .L13
  92:Core/Src/main.c ****   {
 281              		.loc 1 92 35 is_stmt 0 discriminator 1 view .LVU48
 282 0038 124B     		ldr	r3, .L18
 283 003a 1C68     		ldr	r4, [r3]
 284 003c 04F59C44 		add	r4, r4, #19968
 285 0040 2034     		adds	r4, r4, #32
  92:Core/Src/main.c ****   {
 286              		.loc 1 92 47 discriminator 1 view .LVU49
 287 0042 FFF7FEFF 		bl	HAL_GetTick
 288              	.LVL18:
  92:Core/Src/main.c ****   {
 289              		.loc 1 92 19 discriminator 1 view .LVU50
 290 0046 8442     		cmp	r4, r0
 291 0048 11D9     		bls	.L13
  94:Core/Src/main.c **** 
 292              		.loc 1 94 5 is_stmt 1 view .LVU51
 293 004a 1448     		ldr	r0, .L18+24
 294 004c FFF7FEFF 		bl	SIMTransmit
 295              	.LVL19:
  96:Core/Src/main.c ****     {
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 13


 296              		.loc 1 96 5 view .LVU52
  96:Core/Src/main.c ****     {
 297              		.loc 1 96 9 is_stmt 0 view .LVU53
 298 0050 1049     		ldr	r1, .L18+16
 299 0052 1348     		ldr	r0, .L18+28
 300 0054 FFF7FEFF 		bl	strstr
 301              	.LVL20:
  96:Core/Src/main.c ****     {
 302              		.loc 1 96 8 view .LVU54
 303 0058 0028     		cmp	r0, #0
 304 005a D8D0     		beq	.L11
  98:Core/Src/main.c ****       HAL_UART_Transmit(&huart6, (uint8_t *)"APN duoc cau hinh thanh cong!.\r\n", strlen("APN duoc 
 305              		.loc 1 98 7 is_stmt 1 view .LVU55
 306              	.LVL21:
  99:Core/Src/main.c ****     }
 307              		.loc 1 99 7 view .LVU56
 308 005c 4FF47A73 		mov	r3, #1000
 309 0060 2022     		movs	r2, #32
 310 0062 1049     		ldr	r1, .L18+32
 311 0064 0948     		ldr	r0, .L18+8
 312 0066 FFF7FEFF 		bl	HAL_UART_Transmit
 313              	.LVL22:
  98:Core/Src/main.c ****       HAL_UART_Transmit(&huart6, (uint8_t *)"APN duoc cau hinh thanh cong!.\r\n", strlen("APN duoc 
 314              		.loc 1 98 15 is_stmt 0 view .LVU57
 315 006a 0125     		movs	r5, #1
 316 006c DFE7     		b	.L12
 317              	.LVL23:
 318              	.L13:
 110:Core/Src/main.c ****   {
 319              		.loc 1 110 3 is_stmt 1 view .LVU58
 110:Core/Src/main.c ****   {
 320              		.loc 1 110 6 is_stmt 0 view .LVU59
 321 006e 05B1     		cbz	r5, .L17
 322              	.L9:
 114:Core/Src/main.c **** 
 323              		.loc 1 114 1 view .LVU60
 324 0070 38BD     		pop	{r3, r4, r5, pc}
 325              	.LVL24:
 326              	.L17:
 112:Core/Src/main.c ****   }
 327              		.loc 1 112 5 is_stmt 1 view .LVU61
 328 0072 4FF47A73 		mov	r3, #1000
 329 0076 1B22     		movs	r2, #27
 330 0078 0B49     		ldr	r1, .L18+36
 331 007a 0448     		ldr	r0, .L18+8
 332 007c FFF7FEFF 		bl	HAL_UART_Transmit
 333              	.LVL25:
 114:Core/Src/main.c **** 
 334              		.loc 1 114 1 is_stmt 0 view .LVU62
 335 0080 F6E7     		b	.L9
 336              	.L19:
 337 0082 00BF     		.align	2
 338              	.L18:
 339 0084 00000000 		.word	previousTick
 340 0088 34000000 		.word	.LC4
 341 008c 00000000 		.word	huart6
 342 0090 00000000 		.word	ATcommand
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 14


 343 0094 00000000 		.word	apn
 344 0098 4C000000 		.word	.LC5
 345 009c 00000000 		.word	.LC2
 346 00a0 00000000 		.word	buffer
 347 00a4 10000000 		.word	.LC3
 348 00a8 74000000 		.word	.LC6
 349              		.cfi_endproc
 350              	.LFE138:
 352              		.section	.rodata.httpPost.str1.4,"aMS",%progbits,1
 353              		.align	2
 354              	.LC7:
 355 0000 41542B48 		.ascii	"AT+HTTPINIT\015\012\000"
 355      54545049 
 355      4E49540D 
 355      0A00
 356 000e 0000     		.align	2
 357              	.LC8:
 358 0010 41542B48 		.ascii	"AT+HTTPPARA=\"URL\",\"https://%s%s\"\015\012\000"
 358      54545050 
 358      4152413D 
 358      2255524C 
 358      222C2268 
 359 0033 00       		.align	2
 360              	.LC9:
 361 0034 41542B48 		.ascii	"AT+HTTPPARA=\"CONTENT\",\"application/x-www-form-ur"
 361      54545050 
 361      4152413D 
 361      22434F4E 
 361      54454E54 
 362 0064 6C656E63 		.ascii	"lencoded\"\015\012\000"
 362      6F646564 
 362      220D0A00 
 363              		.align	2
 364              	.LC10:
 365 0070 41542B48 		.ascii	"AT+HTTPDATA=%d,10000\015\012\000"
 365      54545044 
 365      4154413D 
 365      25642C31 
 365      30303030 
 366 0087 00       		.align	2
 367              	.LC11:
 368 0088 41542B48 		.ascii	"AT+HTTPACTION=1\015\012\000"
 368      54545041 
 368      4354494F 
 368      4E3D310D 
 368      0A00
 369 009a 0000     		.align	2
 370              	.LC12:
 371 009c 2B485454 		.ascii	"+HTTPACTION: 1,200\000"
 371      50414354 
 371      494F4E3A 
 371      20312C32 
 371      303000
 372 00af 00       		.align	2
 373              	.LC13:
 374 00b0 504F5354 		.ascii	"POST success.\015\012\000"
 374      20737563 
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 15


 374      63657373 
 374      2E0D0A00 
 375              		.align	2
 376              	.LC14:
 377 00c0 504F5354 		.ascii	"POST failed.\015\012\000"
 377      20666169 
 377      6C65642E 
 377      0D0A00
 378 00cf 00       		.align	2
 379              	.LC15:
 380 00d0 41542B48 		.ascii	"AT+HTTPTERM\015\012\000"
 380      54545054 
 380      45524D0D 
 380      0A00
 381              		.section	.text.httpPost,"ax",%progbits
 382              		.align	1
 383              		.global	httpPost
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 388              	httpPost:
 389              	.LFB139:
 117:Core/Src/main.c ****   // C·∫•u h√¨nh HTTP
 390              		.loc 1 117 1 is_stmt 1 view -0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 38B5     		push	{r3, r4, r5, lr}
 395              	.LCFI4:
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 3, -16
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
 119:Core/Src/main.c ****   HAL_Delay(2000);                // ƒê·ª£i m·ªôt ch√∫t sau khi kh·ªüi t·∫°o
 401              		.loc 1 119 3 view .LVU64
 402 0002 2B48     		ldr	r0, .L24
 403 0004 FFF7FEFF 		bl	SIMTransmit
 404              	.LVL26:
 120:Core/Src/main.c **** 
 405              		.loc 1 120 3 view .LVU65
 406 0008 4FF4FA60 		mov	r0, #2000
 407 000c FFF7FEFF 		bl	HAL_Delay
 408              	.LVL27:
 123:Core/Src/main.c ****   SIMTransmit(ATcommand); // C·∫•u h√¨nh URL c·ªßa server
 409              		.loc 1 123 3 view .LVU66
 410 0010 284C     		ldr	r4, .L24+4
 411 0012 294B     		ldr	r3, .L24+8
 412 0014 294A     		ldr	r2, .L24+12
 413 0016 2A49     		ldr	r1, .L24+16
 414 0018 2046     		mov	r0, r4
 415 001a FFF7FEFF 		bl	sprintf
 416              	.LVL28:
 124:Core/Src/main.c ****   HAL_Delay(2000);
 417              		.loc 1 124 3 view .LVU67
 418 001e 2046     		mov	r0, r4
 419 0020 FFF7FEFF 		bl	SIMTransmit
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 16


 420              	.LVL29:
 125:Core/Src/main.c **** 
 421              		.loc 1 125 3 view .LVU68
 422 0024 4FF4FA60 		mov	r0, #2000
 423 0028 FFF7FEFF 		bl	HAL_Delay
 424              	.LVL30:
 128:Core/Src/main.c ****   HAL_Delay(2000);
 425              		.loc 1 128 3 view .LVU69
 426 002c 2548     		ldr	r0, .L24+20
 427 002e FFF7FEFF 		bl	SIMTransmit
 428              	.LVL31:
 129:Core/Src/main.c **** 
 429              		.loc 1 129 3 view .LVU70
 430 0032 4FF4FA60 		mov	r0, #2000
 431 0036 FFF7FEFF 		bl	HAL_Delay
 432              	.LVL32:
 132:Core/Src/main.c ****   SIMTransmit(ATcommand);
 433              		.loc 1 132 3 view .LVU71
 434 003a 234D     		ldr	r5, .L24+24
 435 003c 2846     		mov	r0, r5
 436 003e FFF7FEFF 		bl	strlen
 437              	.LVL33:
 438 0042 0246     		mov	r2, r0
 439 0044 2149     		ldr	r1, .L24+28
 440 0046 2046     		mov	r0, r4
 441 0048 FFF7FEFF 		bl	sprintf
 442              	.LVL34:
 133:Core/Src/main.c ****   HAL_Delay(2000);
 443              		.loc 1 133 3 view .LVU72
 444 004c 2046     		mov	r0, r4
 445 004e FFF7FEFF 		bl	SIMTransmit
 446              	.LVL35:
 134:Core/Src/main.c **** 
 447              		.loc 1 134 3 view .LVU73
 448 0052 4FF4FA60 		mov	r0, #2000
 449 0056 FFF7FEFF 		bl	HAL_Delay
 450              	.LVL36:
 137:Core/Src/main.c ****   HAL_Delay(2000);
 451              		.loc 1 137 3 view .LVU74
 452 005a 2846     		mov	r0, r5
 453 005c FFF7FEFF 		bl	SIMTransmit
 454              	.LVL37:
 138:Core/Src/main.c **** 
 455              		.loc 1 138 3 view .LVU75
 456 0060 4FF4FA60 		mov	r0, #2000
 457 0064 FFF7FEFF 		bl	HAL_Delay
 458              	.LVL38:
 141:Core/Src/main.c ****   HAL_Delay(5000);                    // ƒê·ª£i ph·∫£n h·ªìi t·ª´ server
 459              		.loc 1 141 3 view .LVU76
 460 0068 1948     		ldr	r0, .L24+32
 461 006a FFF7FEFF 		bl	SIMTransmit
 462              	.LVL39:
 142:Core/Src/main.c **** 
 463              		.loc 1 142 3 view .LVU77
 464 006e 41F28830 		movw	r0, #5000
 465 0072 FFF7FEFF 		bl	HAL_Delay
 466              	.LVL40:
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 17


 145:Core/Src/main.c ****   {
 467              		.loc 1 145 3 view .LVU78
 145:Core/Src/main.c ****   {
 468              		.loc 1 145 7 is_stmt 0 view .LVU79
 469 0076 1749     		ldr	r1, .L24+36
 470 0078 1748     		ldr	r0, .L24+40
 471 007a FFF7FEFF 		bl	strstr
 472              	.LVL41:
 145:Core/Src/main.c ****   {
 473              		.loc 1 145 6 view .LVU80
 474 007e 70B1     		cbz	r0, .L21
 147:Core/Src/main.c ****   }
 475              		.loc 1 147 5 is_stmt 1 view .LVU81
 476 0080 4FF47A73 		mov	r3, #1000
 477 0084 0F22     		movs	r2, #15
 478 0086 1549     		ldr	r1, .L24+44
 479 0088 1548     		ldr	r0, .L24+48
 480 008a FFF7FEFF 		bl	HAL_UART_Transmit
 481              	.LVL42:
 482              	.L22:
 155:Core/Src/main.c ****   HAL_Delay(2000);
 483              		.loc 1 155 3 view .LVU82
 484 008e 1548     		ldr	r0, .L24+52
 485 0090 FFF7FEFF 		bl	SIMTransmit
 486              	.LVL43:
 156:Core/Src/main.c **** }
 487              		.loc 1 156 3 view .LVU83
 488 0094 4FF4FA60 		mov	r0, #2000
 489 0098 FFF7FEFF 		bl	HAL_Delay
 490              	.LVL44:
 157:Core/Src/main.c **** 
 491              		.loc 1 157 1 is_stmt 0 view .LVU84
 492 009c 38BD     		pop	{r3, r4, r5, pc}
 493              	.L21:
 151:Core/Src/main.c ****   }
 494              		.loc 1 151 5 is_stmt 1 view .LVU85
 495 009e 4FF47A73 		mov	r3, #1000
 496 00a2 0E22     		movs	r2, #14
 497 00a4 1049     		ldr	r1, .L24+56
 498 00a6 0E48     		ldr	r0, .L24+48
 499 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 500              	.LVL45:
 501 00ac EFE7     		b	.L22
 502              	.L25:
 503 00ae 00BF     		.align	2
 504              	.L24:
 505 00b0 00000000 		.word	.LC7
 506 00b4 00000000 		.word	ATcommand
 507 00b8 00000000 		.word	resource
 508 00bc 00000000 		.word	server
 509 00c0 10000000 		.word	.LC8
 510 00c4 34000000 		.word	.LC9
 511 00c8 00000000 		.word	content
 512 00cc 70000000 		.word	.LC10
 513 00d0 88000000 		.word	.LC11
 514 00d4 9C000000 		.word	.LC12
 515 00d8 00000000 		.word	buffer
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 18


 516 00dc B0000000 		.word	.LC13
 517 00e0 00000000 		.word	huart6
 518 00e4 D0000000 		.word	.LC15
 519 00e8 C0000000 		.word	.LC14
 520              		.cfi_endproc
 521              	.LFE139:
 523              		.section	.text.Error_Handler,"ax",%progbits
 524              		.align	1
 525              		.global	Error_Handler
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	Error_Handler:
 531              	.LFB145:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /* USER CODE END 4 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 348:Core/Src/main.c ****   * @retval None
 349:Core/Src/main.c ****   */
 350:Core/Src/main.c **** void Error_Handler(void)
 351:Core/Src/main.c **** {
 532              		.loc 1 351 1 view -0
 533              		.cfi_startproc
 534              		@ Volatile: function does not return.
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 352:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 353:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 354:Core/Src/main.c ****   __disable_irq();
 538              		.loc 1 354 3 view .LVU87
 539              	.LBB7:
 540              	.LBI7:
 541              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 19


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 20


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 21


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 22


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 23


 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 24


 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 25


 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 26


 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 27


 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 28


 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 29


 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 30


 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 31


 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 32


 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 33


 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 34


 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 35


 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 542              		.loc 2 960 27 view .LVU88
 543              	.LBB8:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 544              		.loc 2 962 3 view .LVU89
 545              		.syntax unified
 546              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 547 0000 72B6     		cpsid i
 548              	@ 0 "" 2
 549              		.thumb
 550              		.syntax unified
 551              	.L27:
 552              	.LBE8:
 553              	.LBE7:
 355:Core/Src/main.c ****   while (1)
 554              		.loc 1 355 3 discriminator 1 view .LVU90
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****   }
 555              		.loc 1 357 3 discriminator 1 view .LVU91
 355:Core/Src/main.c ****   while (1)
 556              		.loc 1 355 9 discriminator 1 view .LVU92
 557 0002 FEE7     		b	.L27
 558              		.cfi_endproc
 559              	.LFE145:
 561              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 562              		.align	1
 563              		.syntax unified
 564              		.thumb
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 36


 565              		.thumb_func
 567              	MX_USART2_UART_Init:
 568              	.LFB142:
 263:Core/Src/main.c **** 
 569              		.loc 1 263 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573 0000 08B5     		push	{r3, lr}
 574              	.LCFI5:
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 3, -8
 577              		.cfi_offset 14, -4
 272:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 578              		.loc 1 272 3 view .LVU94
 272:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 579              		.loc 1 272 19 is_stmt 0 view .LVU95
 580 0002 0A48     		ldr	r0, .L32
 581 0004 0A4B     		ldr	r3, .L32+4
 582 0006 0360     		str	r3, [r0]
 273:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 583              		.loc 1 273 3 is_stmt 1 view .LVU96
 273:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 584              		.loc 1 273 24 is_stmt 0 view .LVU97
 585 0008 4FF4E133 		mov	r3, #115200
 586 000c 4360     		str	r3, [r0, #4]
 274:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 587              		.loc 1 274 3 is_stmt 1 view .LVU98
 274:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 588              		.loc 1 274 26 is_stmt 0 view .LVU99
 589 000e 0023     		movs	r3, #0
 590 0010 8360     		str	r3, [r0, #8]
 275:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 591              		.loc 1 275 3 is_stmt 1 view .LVU100
 275:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 592              		.loc 1 275 24 is_stmt 0 view .LVU101
 593 0012 C360     		str	r3, [r0, #12]
 276:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 594              		.loc 1 276 3 is_stmt 1 view .LVU102
 276:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 595              		.loc 1 276 22 is_stmt 0 view .LVU103
 596 0014 0361     		str	r3, [r0, #16]
 277:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 597              		.loc 1 277 3 is_stmt 1 view .LVU104
 277:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 598              		.loc 1 277 20 is_stmt 0 view .LVU105
 599 0016 0C22     		movs	r2, #12
 600 0018 4261     		str	r2, [r0, #20]
 278:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 601              		.loc 1 278 3 is_stmt 1 view .LVU106
 278:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 602              		.loc 1 278 25 is_stmt 0 view .LVU107
 603 001a 8361     		str	r3, [r0, #24]
 279:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 604              		.loc 1 279 3 is_stmt 1 view .LVU108
 279:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 605              		.loc 1 279 28 is_stmt 0 view .LVU109
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 37


 606 001c C361     		str	r3, [r0, #28]
 280:Core/Src/main.c ****   {
 607              		.loc 1 280 3 is_stmt 1 view .LVU110
 280:Core/Src/main.c ****   {
 608              		.loc 1 280 7 is_stmt 0 view .LVU111
 609 001e FFF7FEFF 		bl	HAL_UART_Init
 610              	.LVL46:
 280:Core/Src/main.c ****   {
 611              		.loc 1 280 6 view .LVU112
 612 0022 00B9     		cbnz	r0, .L31
 288:Core/Src/main.c **** 
 613              		.loc 1 288 1 view .LVU113
 614 0024 08BD     		pop	{r3, pc}
 615              	.L31:
 282:Core/Src/main.c ****   }
 616              		.loc 1 282 5 is_stmt 1 view .LVU114
 617 0026 FFF7FEFF 		bl	Error_Handler
 618              	.LVL47:
 619              	.L33:
 620 002a 00BF     		.align	2
 621              	.L32:
 622 002c 00000000 		.word	huart2
 623 0030 00440040 		.word	1073759232
 624              		.cfi_endproc
 625              	.LFE142:
 627              		.section	.text.MX_USART6_UART_Init,"ax",%progbits
 628              		.align	1
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 633              	MX_USART6_UART_Init:
 634              	.LFB143:
 296:Core/Src/main.c **** 
 635              		.loc 1 296 1 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639 0000 08B5     		push	{r3, lr}
 640              	.LCFI6:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 3, -8
 643              		.cfi_offset 14, -4
 305:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 644              		.loc 1 305 3 view .LVU116
 305:Core/Src/main.c ****   huart6.Init.BaudRate = 115200;
 645              		.loc 1 305 19 is_stmt 0 view .LVU117
 646 0002 0A48     		ldr	r0, .L38
 647 0004 0A4B     		ldr	r3, .L38+4
 648 0006 0360     		str	r3, [r0]
 306:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 649              		.loc 1 306 3 is_stmt 1 view .LVU118
 306:Core/Src/main.c ****   huart6.Init.WordLength = UART_WORDLENGTH_8B;
 650              		.loc 1 306 24 is_stmt 0 view .LVU119
 651 0008 4FF4E133 		mov	r3, #115200
 652 000c 4360     		str	r3, [r0, #4]
 307:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 653              		.loc 1 307 3 is_stmt 1 view .LVU120
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 38


 307:Core/Src/main.c ****   huart6.Init.StopBits = UART_STOPBITS_1;
 654              		.loc 1 307 26 is_stmt 0 view .LVU121
 655 000e 0023     		movs	r3, #0
 656 0010 8360     		str	r3, [r0, #8]
 308:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 657              		.loc 1 308 3 is_stmt 1 view .LVU122
 308:Core/Src/main.c ****   huart6.Init.Parity = UART_PARITY_NONE;
 658              		.loc 1 308 24 is_stmt 0 view .LVU123
 659 0012 C360     		str	r3, [r0, #12]
 309:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 660              		.loc 1 309 3 is_stmt 1 view .LVU124
 309:Core/Src/main.c ****   huart6.Init.Mode = UART_MODE_TX_RX;
 661              		.loc 1 309 22 is_stmt 0 view .LVU125
 662 0014 0361     		str	r3, [r0, #16]
 310:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 663              		.loc 1 310 3 is_stmt 1 view .LVU126
 310:Core/Src/main.c ****   huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 664              		.loc 1 310 20 is_stmt 0 view .LVU127
 665 0016 0C22     		movs	r2, #12
 666 0018 4261     		str	r2, [r0, #20]
 311:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 667              		.loc 1 311 3 is_stmt 1 view .LVU128
 311:Core/Src/main.c ****   huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 668              		.loc 1 311 25 is_stmt 0 view .LVU129
 669 001a 8361     		str	r3, [r0, #24]
 312:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 670              		.loc 1 312 3 is_stmt 1 view .LVU130
 312:Core/Src/main.c ****   if (HAL_UART_Init(&huart6) != HAL_OK)
 671              		.loc 1 312 28 is_stmt 0 view .LVU131
 672 001c C361     		str	r3, [r0, #28]
 313:Core/Src/main.c ****   {
 673              		.loc 1 313 3 is_stmt 1 view .LVU132
 313:Core/Src/main.c ****   {
 674              		.loc 1 313 7 is_stmt 0 view .LVU133
 675 001e FFF7FEFF 		bl	HAL_UART_Init
 676              	.LVL48:
 313:Core/Src/main.c ****   {
 677              		.loc 1 313 6 view .LVU134
 678 0022 00B9     		cbnz	r0, .L37
 321:Core/Src/main.c **** 
 679              		.loc 1 321 1 view .LVU135
 680 0024 08BD     		pop	{r3, pc}
 681              	.L37:
 315:Core/Src/main.c ****   }
 682              		.loc 1 315 5 is_stmt 1 view .LVU136
 683 0026 FFF7FEFF 		bl	Error_Handler
 684              	.LVL49:
 685              	.L39:
 686 002a 00BF     		.align	2
 687              	.L38:
 688 002c 00000000 		.word	huart6
 689 0030 00140140 		.word	1073812480
 690              		.cfi_endproc
 691              	.LFE143:
 693              		.section	.text.SystemClock_Config,"ax",%progbits
 694              		.align	1
 695              		.global	SystemClock_Config
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 39


 696              		.syntax unified
 697              		.thumb
 698              		.thumb_func
 700              	SystemClock_Config:
 701              	.LFB141:
 216:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 702              		.loc 1 216 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 80
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706 0000 00B5     		push	{lr}
 707              	.LCFI7:
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 14, -4
 710 0002 95B0     		sub	sp, sp, #84
 711              	.LCFI8:
 712              		.cfi_def_cfa_offset 88
 217:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 713              		.loc 1 217 3 view .LVU138
 217:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 714              		.loc 1 217 22 is_stmt 0 view .LVU139
 715 0004 3022     		movs	r2, #48
 716 0006 0021     		movs	r1, #0
 717 0008 08A8     		add	r0, sp, #32
 718 000a FFF7FEFF 		bl	memset
 719              	.LVL50:
 218:Core/Src/main.c **** 
 720              		.loc 1 218 3 is_stmt 1 view .LVU140
 218:Core/Src/main.c **** 
 721              		.loc 1 218 22 is_stmt 0 view .LVU141
 722 000e 0023     		movs	r3, #0
 723 0010 0393     		str	r3, [sp, #12]
 724 0012 0493     		str	r3, [sp, #16]
 725 0014 0593     		str	r3, [sp, #20]
 726 0016 0693     		str	r3, [sp, #24]
 727 0018 0793     		str	r3, [sp, #28]
 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 728              		.loc 1 222 3 is_stmt 1 view .LVU142
 729              	.LBB9:
 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 730              		.loc 1 222 3 view .LVU143
 731 001a 0193     		str	r3, [sp, #4]
 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 732              		.loc 1 222 3 view .LVU144
 733 001c 1E4A     		ldr	r2, .L46
 734 001e 116C     		ldr	r1, [r2, #64]
 735 0020 41F08051 		orr	r1, r1, #268435456
 736 0024 1164     		str	r1, [r2, #64]
 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 737              		.loc 1 222 3 view .LVU145
 738 0026 126C     		ldr	r2, [r2, #64]
 739 0028 02F08052 		and	r2, r2, #268435456
 740 002c 0192     		str	r2, [sp, #4]
 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 741              		.loc 1 222 3 view .LVU146
 742 002e 019A     		ldr	r2, [sp, #4]
 743              	.LBE9:
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 40


 222:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 744              		.loc 1 222 3 view .LVU147
 223:Core/Src/main.c **** 
 745              		.loc 1 223 3 view .LVU148
 746              	.LBB10:
 223:Core/Src/main.c **** 
 747              		.loc 1 223 3 view .LVU149
 748 0030 0293     		str	r3, [sp, #8]
 223:Core/Src/main.c **** 
 749              		.loc 1 223 3 view .LVU150
 750 0032 1A4A     		ldr	r2, .L46+4
 751 0034 1168     		ldr	r1, [r2]
 752 0036 41F48041 		orr	r1, r1, #16384
 753 003a 1160     		str	r1, [r2]
 223:Core/Src/main.c **** 
 754              		.loc 1 223 3 view .LVU151
 755 003c 1268     		ldr	r2, [r2]
 756 003e 02F48042 		and	r2, r2, #16384
 757 0042 0292     		str	r2, [sp, #8]
 223:Core/Src/main.c **** 
 758              		.loc 1 223 3 view .LVU152
 759 0044 029A     		ldr	r2, [sp, #8]
 760              	.LBE10:
 223:Core/Src/main.c **** 
 761              		.loc 1 223 3 view .LVU153
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 762              		.loc 1 228 3 view .LVU154
 228:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 763              		.loc 1 228 36 is_stmt 0 view .LVU155
 764 0046 0222     		movs	r2, #2
 765 0048 0892     		str	r2, [sp, #32]
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 766              		.loc 1 229 3 is_stmt 1 view .LVU156
 229:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 767              		.loc 1 229 30 is_stmt 0 view .LVU157
 768 004a 0121     		movs	r1, #1
 769 004c 0B91     		str	r1, [sp, #44]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 770              		.loc 1 230 3 is_stmt 1 view .LVU158
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 771              		.loc 1 230 41 is_stmt 0 view .LVU159
 772 004e 1021     		movs	r1, #16
 773 0050 0C91     		str	r1, [sp, #48]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 774              		.loc 1 231 3 is_stmt 1 view .LVU160
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 775              		.loc 1 231 34 is_stmt 0 view .LVU161
 776 0052 0E92     		str	r2, [sp, #56]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 777              		.loc 1 232 3 is_stmt 1 view .LVU162
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 778              		.loc 1 232 35 is_stmt 0 view .LVU163
 779 0054 0F93     		str	r3, [sp, #60]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 780              		.loc 1 233 3 is_stmt 1 view .LVU164
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 72;
 781              		.loc 1 233 30 is_stmt 0 view .LVU165
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 41


 782 0056 0823     		movs	r3, #8
 783 0058 1093     		str	r3, [sp, #64]
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 784              		.loc 1 234 3 is_stmt 1 view .LVU166
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 785              		.loc 1 234 30 is_stmt 0 view .LVU167
 786 005a 4823     		movs	r3, #72
 787 005c 1193     		str	r3, [sp, #68]
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 788              		.loc 1 235 3 is_stmt 1 view .LVU168
 235:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 789              		.loc 1 235 30 is_stmt 0 view .LVU169
 790 005e 1292     		str	r2, [sp, #72]
 236:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 791              		.loc 1 236 3 is_stmt 1 view .LVU170
 236:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 792              		.loc 1 236 30 is_stmt 0 view .LVU171
 793 0060 0423     		movs	r3, #4
 794 0062 1393     		str	r3, [sp, #76]
 237:Core/Src/main.c ****   {
 795              		.loc 1 237 3 is_stmt 1 view .LVU172
 237:Core/Src/main.c ****   {
 796              		.loc 1 237 7 is_stmt 0 view .LVU173
 797 0064 08A8     		add	r0, sp, #32
 798 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 799              	.LVL51:
 237:Core/Src/main.c ****   {
 800              		.loc 1 237 6 view .LVU174
 801 006a 80B9     		cbnz	r0, .L44
 244:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 802              		.loc 1 244 3 is_stmt 1 view .LVU175
 244:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 803              		.loc 1 244 31 is_stmt 0 view .LVU176
 804 006c 0F23     		movs	r3, #15
 805 006e 0393     		str	r3, [sp, #12]
 246:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 806              		.loc 1 246 3 is_stmt 1 view .LVU177
 246:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 807              		.loc 1 246 34 is_stmt 0 view .LVU178
 808 0070 0221     		movs	r1, #2
 809 0072 0491     		str	r1, [sp, #16]
 247:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 810              		.loc 1 247 3 is_stmt 1 view .LVU179
 247:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 811              		.loc 1 247 35 is_stmt 0 view .LVU180
 812 0074 0023     		movs	r3, #0
 813 0076 0593     		str	r3, [sp, #20]
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 814              		.loc 1 248 3 is_stmt 1 view .LVU181
 248:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 815              		.loc 1 248 36 is_stmt 0 view .LVU182
 816 0078 4FF48052 		mov	r2, #4096
 817 007c 0692     		str	r2, [sp, #24]
 249:Core/Src/main.c **** 
 818              		.loc 1 249 3 is_stmt 1 view .LVU183
 249:Core/Src/main.c **** 
 819              		.loc 1 249 36 is_stmt 0 view .LVU184
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 42


 820 007e 0793     		str	r3, [sp, #28]
 251:Core/Src/main.c ****   {
 821              		.loc 1 251 3 is_stmt 1 view .LVU185
 251:Core/Src/main.c ****   {
 822              		.loc 1 251 7 is_stmt 0 view .LVU186
 823 0080 03A8     		add	r0, sp, #12
 824 0082 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 825              	.LVL52:
 251:Core/Src/main.c ****   {
 826              		.loc 1 251 6 view .LVU187
 827 0086 20B9     		cbnz	r0, .L45
 255:Core/Src/main.c **** 
 828              		.loc 1 255 1 view .LVU188
 829 0088 15B0     		add	sp, sp, #84
 830              	.LCFI9:
 831              		.cfi_remember_state
 832              		.cfi_def_cfa_offset 4
 833              		@ sp needed
 834 008a 5DF804FB 		ldr	pc, [sp], #4
 835              	.L44:
 836              	.LCFI10:
 837              		.cfi_restore_state
 239:Core/Src/main.c ****   }
 838              		.loc 1 239 5 is_stmt 1 view .LVU189
 839 008e FFF7FEFF 		bl	Error_Handler
 840              	.LVL53:
 841              	.L45:
 253:Core/Src/main.c ****   }
 842              		.loc 1 253 5 view .LVU190
 843 0092 FFF7FEFF 		bl	Error_Handler
 844              	.LVL54:
 845              	.L47:
 846 0096 00BF     		.align	2
 847              	.L46:
 848 0098 00380240 		.word	1073887232
 849 009c 00700040 		.word	1073770496
 850              		.cfi_endproc
 851              	.LFE141:
 853              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 854              		.align	2
 855              	.LC16:
 856 0000 64697374 		.ascii	"distance=%d\000"
 856      616E6365 
 856      3D256400 
 857              		.section	.text.main,"ax",%progbits
 858              		.align	1
 859              		.global	main
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 864              	main:
 865              	.LFB140:
 166:Core/Src/main.c **** 
 866              		.loc 1 166 1 view -0
 867              		.cfi_startproc
 868              		@ Volatile: function does not return.
 869              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 43


 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871 0000 08B5     		push	{r3, lr}
 872              	.LCFI11:
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 3, -8
 875              		.cfi_offset 14, -4
 175:Core/Src/main.c **** 
 876              		.loc 1 175 3 view .LVU192
 877 0002 FFF7FEFF 		bl	HAL_Init
 878              	.LVL55:
 182:Core/Src/main.c **** 
 879              		.loc 1 182 3 view .LVU193
 880 0006 FFF7FEFF 		bl	SystemClock_Config
 881              	.LVL56:
 189:Core/Src/main.c ****   MX_USART2_UART_Init();
 882              		.loc 1 189 3 view .LVU194
 883 000a FFF7FEFF 		bl	MX_GPIO_Init
 884              	.LVL57:
 190:Core/Src/main.c ****   MX_USART6_UART_Init();
 885              		.loc 1 190 3 view .LVU195
 886 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 887              	.LVL58:
 191:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 888              		.loc 1 191 3 view .LVU196
 889 0012 FFF7FEFF 		bl	MX_USART6_UART_Init
 890              	.LVL59:
 193:Core/Src/main.c **** 
 891              		.loc 1 193 3 view .LVU197
 892 0016 FFF7FEFF 		bl	checkAPN
 893              	.LVL60:
 894              	.L49:
 199:Core/Src/main.c ****   {
 895              		.loc 1 199 3 discriminator 1 view .LVU198
 204:Core/Src/main.c ****     sprintf(content, "distance=%d", distance);
 896              		.loc 1 204 5 discriminator 1 view .LVU199
 204:Core/Src/main.c ****     sprintf(content, "distance=%d", distance);
 897              		.loc 1 204 14 is_stmt 0 discriminator 1 view .LVU200
 898 001a 6422     		movs	r2, #100
 899 001c 044B     		ldr	r3, .L51
 900 001e 1A80     		strh	r2, [r3]	@ movhi
 205:Core/Src/main.c ****     httpPost();
 901              		.loc 1 205 5 is_stmt 1 discriminator 1 view .LVU201
 902 0020 0449     		ldr	r1, .L51+4
 903 0022 0548     		ldr	r0, .L51+8
 904 0024 FFF7FEFF 		bl	sprintf
 905              	.LVL61:
 206:Core/Src/main.c ****   }
 906              		.loc 1 206 5 discriminator 1 view .LVU202
 907 0028 FFF7FEFF 		bl	httpPost
 908              	.LVL62:
 199:Core/Src/main.c ****   {
 909              		.loc 1 199 9 discriminator 1 view .LVU203
 910 002c F5E7     		b	.L49
 911              	.L52:
 912 002e 00BF     		.align	2
 913              	.L51:
 914 0030 00000000 		.word	distance
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 44


 915 0034 00000000 		.word	.LC16
 916 0038 00000000 		.word	content
 917              		.cfi_endproc
 918              	.LFE140:
 920              		.global	distance
 921              		.section	.bss.distance,"aw",%nobits
 922              		.align	1
 925              	distance:
 926 0000 0000     		.space	2
 927              		.global	previousTick
 928              		.section	.bss.previousTick,"aw",%nobits
 929              		.align	2
 932              	previousTick:
 933 0000 00000000 		.space	4
 934              		.global	buffer
 935              		.section	.bss.buffer,"aw",%nobits
 936              		.align	2
 939              	buffer:
 940 0000 00000000 		.space	100
 940      00000000 
 940      00000000 
 940      00000000 
 940      00000000 
 941              		.global	ATcommand
 942              		.section	.bss.ATcommand,"aw",%nobits
 943              		.align	2
 946              	ATcommand:
 947 0000 00000000 		.space	80
 947      00000000 
 947      00000000 
 947      00000000 
 947      00000000 
 948              		.global	content
 949              		.section	.bss.content,"aw",%nobits
 950              		.align	2
 953              	content:
 954 0000 00000000 		.space	80
 954      00000000 
 954      00000000 
 954      00000000 
 954      00000000 
 955              		.global	timeOut
 956              		.section	.rodata.timeOut,"a"
 957              		.align	2
 960              	timeOut:
 961 0000 204E0000 		.word	20000
 962              		.global	resource
 963              		.section	.rodata.resource,"a"
 964              		.align	2
 967              	resource:
 968 0000 2F696E73 		.ascii	"/insert.php\000"
 968      6572742E 
 968      70687000 
 969              		.global	port
 970              		.section	.rodata.port,"a"
 971              		.align	2
 974              	port:
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 45


 975 0000 BB010000 		.word	443
 976              		.global	server
 977              		.section	.rodata.server,"a"
 978              		.align	2
 981              	server:
 982 0000 6875792E 		.ascii	"huy.assfa.net\000"
 982      61737366 
 982      612E6E65 
 982      7400
 983              		.global	apn
 984              		.section	.rodata.apn,"a"
 985              		.align	2
 988              	apn:
 989 0000 762D696E 		.ascii	"v-internet\000"
 989      7465726E 
 989      657400
 990              		.global	huart6
 991              		.section	.bss.huart6,"aw",%nobits
 992              		.align	2
 995              	huart6:
 996 0000 00000000 		.space	72
 996      00000000 
 996      00000000 
 996      00000000 
 996      00000000 
 997              		.global	huart2
 998              		.section	.bss.huart2,"aw",%nobits
 999              		.align	2
 1002              	huart2:
 1003 0000 00000000 		.space	72
 1003      00000000 
 1003      00000000 
 1003      00000000 
 1003      00000000 
 1004              		.text
 1005              	.Letext0:
 1006              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 1007              		.file 4 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 1008              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1009              		.file 6 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/in
 1010              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1011              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1012              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1013              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1014              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1015              		.file 12 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/.
 1016              		.file 13 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/.
 1017              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1018              		.file 15 "<built-in>"
ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:95     .text.MX_GPIO_Init:00000048 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:100    .rodata.SIMTransmit.str1.4:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:107    .text.SIMTransmit:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:113    .text.SIMTransmit:00000000 SIMTransmit
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:195    .text.SIMTransmit:0000006c $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:939    .bss.buffer:00000000 buffer
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:1002   .bss.huart2:00000000 huart2
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:995    .bss.huart6:00000000 huart6
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:204    .rodata.checkAPN.str1.4:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:220    .text.checkAPN:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:226    .text.checkAPN:00000000 checkAPN
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:339    .text.checkAPN:00000084 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:932    .bss.previousTick:00000000 previousTick
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:946    .bss.ATcommand:00000000 ATcommand
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:988    .rodata.apn:00000000 apn
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:353    .rodata.httpPost.str1.4:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:382    .text.httpPost:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:388    .text.httpPost:00000000 httpPost
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:505    .text.httpPost:000000b0 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:967    .rodata.resource:00000000 resource
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:981    .rodata.server:00000000 server
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:953    .bss.content:00000000 content
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:524    .text.Error_Handler:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:530    .text.Error_Handler:00000000 Error_Handler
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:562    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:567    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:622    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:628    .text.MX_USART6_UART_Init:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:633    .text.MX_USART6_UART_Init:00000000 MX_USART6_UART_Init
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:688    .text.MX_USART6_UART_Init:0000002c $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:694    .text.SystemClock_Config:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:700    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:848    .text.SystemClock_Config:00000098 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:854    .rodata.main.str1.4:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:858    .text.main:00000000 $t
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:864    .text.main:00000000 main
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:914    .text.main:00000030 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:925    .bss.distance:00000000 distance
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:922    .bss.distance:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:929    .bss.previousTick:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:936    .bss.buffer:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:943    .bss.ATcommand:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:950    .bss.content:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:960    .rodata.timeOut:00000000 timeOut
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:957    .rodata.timeOut:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:964    .rodata.resource:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:974    .rodata.port:00000000 port
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:971    .rodata.port:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:978    .rodata.server:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:985    .rodata.apn:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:992    .bss.huart6:00000000 $d
C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s:999    .bss.huart2:00000000 $d

ARM GAS  C:\Users\Dell\AppData\Local\Temp\ccKXQk8O.s 			page 47


UNDEFINED SYMBOLS
memset
strlen
HAL_UART_Transmit
HAL_UART_Receive
HAL_GetTick
sprintf
HAL_Delay
strstr
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
